{"ast":null,"code":"import { defineComponent } from 'vue';\nimport chunk from 'lodash/chunk';\nexport default defineComponent({\n  name: 'TilesBlock',\n  props: {\n    maxPerRow: {\n      type: Number,\n      default: 5\n    }\n  },\n  render(createElement) {\n    const renderAncestor = elements => createElement('div', {\n      attrs: {\n        class: 'tile is-ancestor'\n      }\n    }, elements.map(element => {\n      return createElement('div', {\n        attrs: {\n          class: 'tile is-parent'\n        }\n      }, [element]);\n    }));\n    if (this.default.length <= this.maxPerRow) {\n      return renderAncestor(this.$slots.default);\n    } else {\n      return createElement('div', {\n        attrs: {\n          class: 'is-tiles-wrapper'\n        }\n      }, chunk(this.$slots.default, this.maxPerRow).map(group => {\n        return renderAncestor(group);\n      }));\n    }\n  }\n});","map":{"version":3,"names":["defineComponent","chunk","name","props","maxPerRow","type","Number","default","render","createElement","renderAncestor","elements","attrs","class","map","element","length","$slots","group"],"sources":["C:\\Users\\naldo\\OneDrive\\Documents\\GitHub\\appbarber\\barbervue\\src\\components\\TilesBlock.vue"],"sourcesContent":["<script>\nimport { defineComponent } from 'vue'\nimport chunk from 'lodash/chunk'\n\nexport default defineComponent({\n  name: 'TilesBlock',\n  props: {\n    maxPerRow: {\n      type: Number,\n      default: 5\n    }\n  },\n  render (createElement) {\n    const renderAncestor = elements => createElement(\n      'div',\n      { attrs: { class: 'tile is-ancestor' } },\n      elements.map((element) => {\n        return createElement('div', { attrs: { class: 'tile is-parent' } }, [\n          element\n        ])\n      })\n    )\n\n    if (this.default.length <= this.maxPerRow) {\n      return renderAncestor(this.$slots.default)\n    } else {\n      return createElement(\n        'div',\n        { attrs: { class: 'is-tiles-wrapper' } },\n        chunk(this.$slots.default, this.maxPerRow).map((group) => {\n          return renderAncestor(group)\n        })\n      )\n    }\n  }\n})\n</script>\n"],"mappings":"AACA,SAASA,eAAc,QAAS,KAAI;AACpC,OAAOC,KAAI,MAAO,cAAa;AAE/B,eAAeD,eAAe,CAAC;EAC7BE,IAAI,EAAE,YAAY;EAClBC,KAAK,EAAE;IACLC,SAAS,EAAE;MACTC,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,MAAKA,CAAGC,aAAa,EAAE;IACrB,MAAMC,cAAa,GAAIC,QAAO,IAAKF,aAAa,CAC9C,KAAK,EACL;MAAEG,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAmB;IAAE,CAAC,EACxCF,QAAQ,CAACG,GAAG,CAAEC,OAAO,IAAK;MACxB,OAAON,aAAa,CAAC,KAAK,EAAE;QAAEG,KAAK,EAAE;UAAEC,KAAK,EAAE;QAAiB;MAAE,CAAC,EAAE,CAClEE,OAAM,CACP;IACH,CAAC,EACH;IAEA,IAAI,IAAI,CAACR,OAAO,CAACS,MAAK,IAAK,IAAI,CAACZ,SAAS,EAAE;MACzC,OAAOM,cAAc,CAAC,IAAI,CAACO,MAAM,CAACV,OAAO;IAC3C,OAAO;MACL,OAAOE,aAAa,CAClB,KAAK,EACL;QAAEG,KAAK,EAAE;UAAEC,KAAK,EAAE;QAAmB;MAAE,CAAC,EACxCZ,KAAK,CAAC,IAAI,CAACgB,MAAM,CAACV,OAAO,EAAE,IAAI,CAACH,SAAS,CAAC,CAACU,GAAG,CAAEI,KAAK,IAAK;QACxD,OAAOR,cAAc,CAACQ,KAAK;MAC7B,CAAC,EACH;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}