{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nimport HomeView from '../views/HomeView.vue';\nimport Register from '../views/RegisterView.vue';\nimport Login from '../views/LoginView.vue';\nimport Admin from '../views/UsersView.vue';\nimport axios from 'axios';\nconst routes = [{\n  path: '/',\n  name: 'home',\n  component: HomeView\n}, {\n  path: '/register',\n  name: 'register',\n  component: Register\n}, {\n  path: '/login',\n  name: 'login',\n  component: Login\n}, {\n  path: '/admin',\n  name: 'admin',\n  component: Admin,\n  beforeEnter: (to, from, next) => {\n    if (localStorage.getItem('token') != undefined) {\n      var req = {\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem(\"token\")\n        }\n      };\n      axios.post(\"http://localhost:8686/api/validate\", {}, req).then(res => {\n        console.log(res);\n        next();\n      }).catch(err => {\n        console.log(err);\n        next(\"/login\");\n      });\n    } else {\n      next(\"/login\");\n    }\n  }\n}];\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","HomeView","Register","Login","Admin","axios","routes","path","name","component","beforeEnter","to","from","next","localStorage","getItem","undefined","req","headers","Authorization","post","then","res","console","log","catch","err","router","history","process","env","BASE_URL"],"sources":["C:/Users/naldo/OneDrive/Documents/GitHub/appbarber/barbervue/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router'\nimport HomeView from '../views/HomeView.vue'\nimport Register from '../views/RegisterView.vue'\nimport Login from '../views/LoginView.vue'\nimport Admin from '../views/UsersView.vue'\nimport axios from 'axios';\n\nconst routes = [\n  {\n    path: '/',\n    name: 'home',\n    component: HomeView\n  },\n  {\n    path: '/register',\n    name: 'register',\n    component: Register\n   },\n   {\n   path: '/login',\n   name: 'login',\n   component: Login\n  },\n  {\n    path: '/admin',\n    name: 'admin',\n    component: Admin,\n    beforeEnter: (to, from, next) =>{\n      if(localStorage.getItem('token') != undefined){\n        var req = {\n          headers: {\n            Authorization: \"Bearer \" + localStorage.getItem(\"token\")\n          }\n        }\n        axios.post(\"http://localhost:8686/api/validate\",{},req).then(res =>{\n          console.log(res);\n          next()\n        }).catch(err =>{\n          console.log(err)\n          next(\"/login\")\n        })\n      }else{\n        next(\"/login\");\n      }\n    }\n\n   },\n\n]\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n})\n\nexport default router\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,QAAQ,MAAM,2BAA2B;AAChD,OAAOC,KAAK,MAAM,wBAAwB;AAC1C,OAAOC,KAAK,MAAM,wBAAwB;AAC1C,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,GAAG;EACTC,IAAI,EAAE,MAAM;EACZC,SAAS,EAAER;AACb,CAAC,EACD;EACEM,IAAI,EAAE,WAAW;EACjBC,IAAI,EAAE,UAAU;EAChBC,SAAS,EAAEP;AACZ,CAAC,EACD;EACAK,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,OAAO;EACbC,SAAS,EAAEN;AACZ,CAAC,EACD;EACEI,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,OAAO;EACbC,SAAS,EAAEL,KAAK;EAChBM,WAAW,EAAEA,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAI;IAC9B,IAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAIC,SAAS,EAAC;MAC5C,IAAIC,GAAG,GAAG;QACRC,OAAO,EAAE;UACPC,aAAa,EAAE,SAAS,GAAGL,YAAY,CAACC,OAAO,CAAC,OAAO;QACzD;MACF,CAAC;MACDV,KAAK,CAACe,IAAI,CAAC,oCAAoC,EAAC,CAAC,CAAC,EAACH,GAAG,CAAC,CAACI,IAAI,CAACC,GAAG,IAAG;QACjEC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;QAChBT,IAAI,EAAE;MACR,CAAC,CAAC,CAACY,KAAK,CAACC,GAAG,IAAG;QACbH,OAAO,CAACC,GAAG,CAACE,GAAG,CAAC;QAChBb,IAAI,CAAC,QAAQ,CAAC;MAChB,CAAC,CAAC;IACJ,CAAC,MAAI;MACHA,IAAI,CAAC,QAAQ,CAAC;IAChB;EACF;AAED,CAAC,CAEH;AAED,MAAMc,MAAM,GAAG5B,YAAY,CAAC;EAC1B6B,OAAO,EAAE5B,gBAAgB,CAAC6B,OAAO,CAACC,GAAG,CAACC,QAAQ,CAAC;EAC/CzB;AACF,CAAC,CAAC;AAEF,eAAeqB,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}