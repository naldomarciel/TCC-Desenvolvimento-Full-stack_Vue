{"ast":null,"code":"import exportFromJSON from \"export-from-json\";\nexport const excelParser = () => {\n  function exportDataFromJSON(data, newFileName, fileExportType) {\n    if (!data) return;\n    try {\n      const fileName = newFileName || \"exported-data\";\n      const exportType = exportFromJSON.types[fileExportType || \"xlsx\"];\n      exportFromJSON({\n        data,\n        fileName,\n        exportType\n      });\n    } catch (e) {\n      throw new Error(\"Parsing failed!\");\n    }\n  }\n  return {\n    exportDataFromJSON\n  };\n};","map":{"version":3,"names":["exportFromJSON","excelParser","exportDataFromJSON","data","newFileName","fileExportType","fileName","exportType","types","e","Error"],"sources":["C:/Users/naldo/OneDrive/Documents/GitHub/appbarber/barbervue/src/assets/js/excel-parser.js"],"sourcesContent":["import exportFromJSON from \"export-from-json\";\r\n\r\nexport const excelParser = () => {\r\n  function exportDataFromJSON(data, newFileName, fileExportType) {\r\n    if (!data) return;\r\n    try {\r\n      const fileName = newFileName || \"exported-data\";\r\n      const exportType = exportFromJSON.types[fileExportType || \"xlsx\"];\r\n      exportFromJSON({ data, fileName, exportType });\r\n    } catch (e) {\r\n      throw new Error(\"Parsing failed!\");\r\n    }\r\n  }\r\n\r\n  return {\r\n    exportDataFromJSON\r\n  };\r\n};"],"mappings":"AAAA,OAAOA,cAAc,MAAM,kBAAkB;AAE7C,OAAO,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAC/B,SAASC,kBAAkBA,CAACC,IAAI,EAAEC,WAAW,EAAEC,cAAc,EAAE;IAC7D,IAAI,CAACF,IAAI,EAAE;IACX,IAAI;MACF,MAAMG,QAAQ,GAAGF,WAAW,IAAI,eAAe;MAC/C,MAAMG,UAAU,GAAGP,cAAc,CAACQ,KAAK,CAACH,cAAc,IAAI,MAAM,CAAC;MACjEL,cAAc,CAAC;QAAEG,IAAI;QAAEG,QAAQ;QAAEC;MAAW,CAAC,CAAC;IAChD,CAAC,CAAC,OAAOE,CAAC,EAAE;MACV,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;IACpC;EACF;EAEA,OAAO;IACLR;EACF,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}